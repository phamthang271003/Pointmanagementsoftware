package FORM;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JTextField;
import javax.swing.border.BevelBorder;
import java.awt.Font;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook.*;import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

public class frmStudents extends JFrame {

	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JTable tb_ListStudent;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					frmStudents frame = new frmStudents();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public frmStudents() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 928, 635);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel lblNewLabel = new JLabel("New label");
		lblNewLabel.setBounds(10, 10, 45, 13);
		contentPane.add(lblNewLabel);
		
		JButton btnAddStudent = new JButton("Đọc file excel");
		btnAddStudent.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				 JFileChooser fileChooser = new JFileChooser();
	                int result = fileChooser.showOpenDialog(null);
	                if (result == JFileChooser.APPROVE_OPTION) {
	                    File selectedFile = fileChooser.getSelectedFile();
	                    try {
	                        readExcelFile(selectedFile);
	                    } catch (IOException ex) {
	                        ex.printStackTrace();
	                        JOptionPane.showMessageDialog(null, "Error reading file: " + ex.getMessage());
	                    }
	                }
			}
		});
		btnAddStudent.setBounds(70, 6, 131, 33);
		contentPane.add(btnAddStudent);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(211, 10, 693, 578);
		contentPane.add(scrollPane);
		
		tb_ListStudent = new JTable();
		tb_ListStudent.setModel(new DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "MSSV", "Họ Tên", "Ngày Nhập Học", "Học Kì", "Giới Tính", "Ngày Sinh", "Địa chỉ"
                }
        ));
        scrollPane.setViewportView(tb_ListStudent);
	}
	
	 private void readExcelFile(File file) throws IOException {
	        FileInputStream fis = new FileInputStream(file);
	        Workbook workbook = new XSSFWorkbook(fis);
	        Sheet sheet = workbook.getSheetAt(0);
	        DefaultTableModel model = (DefaultTableModel) tb_ListStudent.getModel();
	        model.setRowCount(0); // Clear existing data

	        for (Row row : sheet) {
	            if (row.getRowNum() == 0) {
	                continue; // Skip header row
	            }
	            String[] rowData = new String[7];
	            for (int cn = 0; cn < 7; cn++) {
	                Cell cell = row.getCell(cn, Row.MissingCellPolicy.CREATE_NULL_AS_BLANK);
	                rowData[cn] = cell.toString();
	            }
	            model.addRow(rowData);
	        }

	        workbook.close();
	        fis.close();
	    }
}
